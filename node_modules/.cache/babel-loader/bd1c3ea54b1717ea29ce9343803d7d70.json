{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this;\n\nimport * as types from './../constants/actionTypes';\n\nvar s4 = function s4() {\n  return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1); // random ÍD\n};\n\nvar generateID = function generateID() {\n  return _this.s4() + _this.s4() + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4() + '-' + _this.s4();\n};\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initialState = data ? data : [];\n\nvar myReducer = function myReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: generateID(),\n        name: action.task.name,\n        status: action.task.status === 'true' ? true : false\n      };\n      state.push(newTask);\n      localStorage.setItem('tasks', JSON.stringify(state));\n      return _toConsumableArray(state);\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Quanly_redux\\src\\reducers\\tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","generateID","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","id","name","task","status","push","setItem","stringify"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;;AACA,IAAIC,EAAE,GAAG,SAALA,EAAK,GAAK;AACV,SAAOC,IAAI,CAACC,KAAL,CAAY,IAAED,IAAI,CAACE,MAAL,KAAc,OAA5B,EAAsCC,QAAtC,CAA+C,EAA/C,EAAmDC,SAAnD,CAA6D,CAA7D,CAAP,CADU,CAC8D;AACzE,CAFH;;AAGC,IAAIC,UAAU,GAAG,SAAbA,UAAa,GAAK;AACnB,SAAO,KAAI,CAACN,EAAL,KAAW,KAAI,CAACA,EAAL,EAAX,GAAuB,KAAI,CAACA,EAAL,EAAvB,GAAmC,GAAnC,GAAyC,KAAI,CAACA,EAAL,EAAzC,GAAqD,GAArD,GAA0D,KAAI,CAACA,EAAL,EAA1D,GAAoE,GAApE,GAAyE,KAAI,CAACA,EAAL,EAAzE,GAAmF,GAAnF,GAAwF,KAAI,CAACA,EAAL,EAAxF,GAAmG,GAAnG,GAAwG,KAAI,CAACA,EAAL,EAA/G;AACD,CAFF;;AAGD,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AAEA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAS,EAAhC;;AAEA,IAAIM,SAAS,GAAG,SAAZA,SAAY,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBF,YAAwB;AAAA,MAAVG,MAAU;;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKf,KAAK,CAACmB,QAAX;AACI,UAAIC,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAEd,UAAU,EADJ;AAEVe,QAAAA,IAAI,EAAEN,MAAM,CAACO,IAAP,CAAYD,IAFR;AAGVE,QAAAA,MAAM,EAAER,MAAM,CAACO,IAAP,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,IAAhC,GAAuC;AAHrC,OAAd;AAKAT,MAAAA,KAAK,CAACU,IAAN,CAAWL,OAAX;AACAT,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA6BjB,IAAI,CAACkB,SAAL,CAAeZ,KAAf,CAA7B;AACA,gCAAWA,KAAX;;AACJ;AAAS,aAAOA,KAAP;AAZb;AAeH,CAhBD;;AAkBA,eAAeD,SAAf","sourcesContent":["import * as types from './../constants/actionTypes';\r\nlet s4 = () =>{\r\n    return Math.floor((1+Math.random()*0x10000)).toString(16).substring(1); // random ÍD\r\n  }\r\n let generateID = () =>{\r\n    return this.s4()+ this.s4() + this.s4() + '-' + this.s4() + '-'+ this.s4()+'-'+ this.s4()+'-'+ this.s4()+ '-'+ this.s4()\r\n  }\r\nlet data = JSON.parse(localStorage.getItem('tasks'));\r\n\r\nlet initialState = data ? data: [];\r\n\r\nlet myReducer = (state = initialState ,action) =>{\r\n    switch(action.type){\r\n        case types.LIST_ALL:\r\n            return state;\r\n        case types.ADD_TASK:\r\n            let newTask = {\r\n                id: generateID(),\r\n                name: action.task.name,\r\n                status: action.task.status === 'true' ? true : false\r\n            }          \r\n            state.push(newTask);\r\n            localStorage.setItem('tasks',JSON.stringify(state));\r\n            return [...state];\r\n        default: return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default myReducer;\r\n"]},"metadata":{},"sourceType":"module"}