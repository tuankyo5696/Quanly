{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './Components/TaskForm';\nimport TaskForm from './Components/TaskForm';\nimport TaskControl from './Components/TaskControl';\nimport TaskList from './Components/TaskList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onToggleForm = function () {\n      if (_this.state.isDisplayForm && _this.state.taskEditing !== null) {\n        _this.setState({\n          isDisplayForm: true,\n          taskEditing: null\n        });\n      } else {\n        _this.setState({\n          isDisplayForm: !_this.state.isDisplayForm,\n          taskEditing: null\n        });\n      }\n    };\n\n    _this.onCloseForm = function () {\n      _this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    _this.onShowForm = function () {\n      _this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    _this.onSubmit = function (data) {\n      var tasks = _this.state.tasks;\n\n      if (data.id === '') {\n        data.id = _this.generateID();\n        tasks.push(data);\n      } else {\n        var index = _this.findIndex(data.id);\n\n        tasks[index] = data;\n      }\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdateStatus = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onDelete = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdate = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      var taskEditing = tasks[index];\n\n      _this.setState({\n        taskEditing: taskEditing\n      });\n\n      _this.onShowForm();\n    };\n\n    _this.findIndex = function (id) {\n      var tasks = _this.state.tasks;\n      var result = -1;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) result = index;\n      });\n      return result;\n    };\n\n    _this.onFilter = function (filterName, filterStatus) {\n      filterStatus = parseInt(filterStatus, 10);\n\n      _this.setState({\n        filter: {\n          name: filterName.onLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    _this.state = {\n      tasks: [],\n      // id, name, status,\n      isDisplayForm: false,\n      taskEditing: null,\n      fiiter: {\n        name: '',\n        status: -1\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage && localStorage.getItem('tasks')) {\n        var tasks = JSON.parse(localStorage.getItem('tasks'));\n        this.setState({\n          tasks: tasks\n        });\n      }\n    }\n  }, {\n    key: \"s4\",\n    value: function s4() {\n      return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1); // random √çD\n    }\n  }, {\n    key: \"generateID\",\n    value: function generateID() {\n      return this.s4() + this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayForm = _this$state.isDisplayForm,\n          taskEditing = _this$state.taskEditing,\n          filter = _this$state.filter;\n\n      if (filter) {\n        if (filter.name) {\n          tasks = tasks.filter(function (task) {\n            return task.name.toLowerCase().indexOf(filter.name) !== -1;\n          });\n        }\n      }\n\n      var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n        onSubmit: this.onSubmit,\n        onCloseForm: this.onCloseForm,\n        task: taskEditing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Qu\\u1EA3n l\\xFD c\\xF4ng vi\\u1EC7c\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, elmTaskForm), React.createElement(\"div\", {\n        className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), \"Th\\xEAm c\\xF4ng vi\\u1EC7c\"), React.createElement(TaskControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        tasks: tasks,\n        onUpdateStatus: this.onUpdateStatus,\n        onDelete: this.onDelete,\n        onUpdate: this.onUpdate,\n        onFilter: this.onFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\App2\\src\\App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","App","props","onToggleForm","state","isDisplayForm","taskEditing","setState","onCloseForm","onShowForm","onSubmit","data","tasks","id","generateID","push","index","findIndex","localStorage","setItem","JSON","stringify","onUpdateStatus","status","onDelete","splice","onUpdate","result","forEach","task","onFilter","filterName","filterStatus","parseInt","filter","name","onLowerCase","fiiter","getItem","parse","Math","floor","random","toString","substring","s4","toLowerCase","indexOf","elmTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport './Components/TaskForm';\nimport TaskForm from './Components/TaskForm';\nimport TaskControl from './Components/TaskControl';\nimport TaskList from './Components/TaskList';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      tasks: [], // id, name, status,\n      isDisplayForm: false,\n      taskEditing: null,\n      fiiter : {\n        name: '',\n        status: -1\n      }\n    }\n    }\n  componentWillMount(){\n    if(localStorage && localStorage.getItem('tasks')){\n      let tasks= JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      })\n    }\n  }\n  \n  \n  s4(){\n    return Math.floor((1+Math.random()*0x10000)).toString(16).substring(1); // random √çD\n  }\n  generateID(){\n    return this.s4()+ this.s4() + this.s4() + '-' + this.s4() + '-'+ this.s4()+'-'+ this.s4()+'-'+ this.s4()+ '-'+ this.s4()\n  }\n  onToggleForm =() =>{\n    if(this.state.isDisplayForm && this.state.taskEditing !== null){\n        this.setState({\n          isDisplayForm: true,\n          taskEditing: null\n        })\n    } else{\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditing: null\n      })\n    } \n    \n  }\n  onCloseForm =() =>{\n    this.setState({\n      isDisplayForm: false\n    })\n    \n\n  }\n  onShowForm = () =>{\n    this.setState({\n      isDisplayForm: true\n    })\n  }\n  onSubmit = (data)=>{\n    let {tasks} =this.state;\n    if (data.id === ''){\n      data.id = this.generateID()\n      tasks.push(data)\n    }else{\n      let index = this.findIndex(data.id)\n      tasks[index] = data;\n    }\n    \n    this.setState({\n      tasks: tasks\n    })\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n  onUpdateStatus =(id) =>{\n    let {tasks} = this.state\n    let index = this.findIndex(id)\n    if(index !== -1){\n      tasks[index].status = ! tasks[index].status;\n      this.setState({\n      tasks : tasks\n    })\n\n    }\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n  onDelete =(id) =>{\n      let {tasks} =this.state\n      let index = this.findIndex(id)\n      if(index !== -1){\n        tasks.splice(index,1);\n        this.setState({\n          tasks : tasks\n        })\n      }\n      localStorage.setItem('tasks',JSON.stringify(tasks))\n  }\n  onUpdate = (id) =>{\n      let {tasks} = this.state\n      let index = this.findIndex(id)\n      let taskEditing = tasks[index];\n      this.setState({\n        taskEditing : taskEditing \n      });\n      this.onShowForm();\n  }\n\n  findIndex = (id) =>{\n    let {tasks} = this.state\n    let result = -1;\n    tasks.forEach((task,index)=>{\n        if(task.id === id)\n            result = index;\n    })\n    return result;\n  }\n  onFilter = (filterName,filterStatus) =>{\n     filterStatus = parseInt(filterStatus,10);\n     this.setState({\n       filter:{\n         name: filterName.onLowerCase(),\n         status: filterStatus\n       }\n     })\n  }\n  render() {\n    let {tasks,isDisplayForm,taskEditing,filter}= this.state;\n    if(filter){\n      if(filter.name){\n          tasks=  tasks.filter((task)=>{\n              return task.name.toLowerCase().indexOf(filter.name) !== -1;\n          });\n      }\n    }\n    let elmTaskForm = isDisplayForm\n          ? <TaskForm onSubmit ={this.onSubmit} \n                      onCloseForm={this.onCloseForm}\n                      task ={taskEditing}\n                      /> \n          :''\n    return (\n     \n        <div className=\"container\">\n            <div className=\"text-center\">\n                <h1>Qu·∫£n l√Ω c√¥ng vi·ªác</h1>\n            </div>\n            \n            <div className=\"row\">\n                <div className={isDisplayForm? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n                    {elmTaskForm}\n                </div>\n                <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                    <button type=\"button\"\n                           className=\"btn btn-primary\"\n                           onClick = {this.onToggleForm}\n                           >\n                        <span className=\"fa fa-plus mr-5\"></span>Th√™m c√¥ng vi·ªác\n                    </button>\n                        {/* {<!-- { Search-Sort} -->} */}\n                              <TaskControl/>\n                        {/* <!-- List --> */}\n                              <TaskList\n                                tasks = {tasks}\n                                onUpdateStatus = {this.onUpdateStatus}\n                                onDelete ={this.onDelete}\n                                onUpdate ={this.onUpdate}\n                                onFilter ={this.onFilter}\n                              />\n                </div>\n                \n            </div>\n            \n        </div>\n        \n      \n    \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}