{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './Components/TaskForm';\nimport TaskForm from './Components/TaskForm';\nimport TaskControl from './Components/TaskControl';\nimport TaskList from './Components/TaskList';\nimport { findIndex } from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onToggleForm = function () {\n      _this.props.onToggleForm();\n    };\n\n    _this.onCloseForm = function () {};\n\n    _this.onShowForm = function () {};\n\n    _this.onSubmit = function (data) {\n      var tasks = _this.state.tasks;\n\n      if (data.id === '') {\n        data.id = _this.generateID();\n        tasks.push(data);\n      } else {\n        var index = _this.findIndex(data.id);\n\n        tasks[index] = data;\n      }\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdateStatus = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onDelete = function (id) {\n      var tasks = _this.state.tasks;\n      var index = findIndex(tasks, function (task) {\n        return task.id === id;\n      });\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdate = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      var taskEditing = tasks[index];\n\n      _this.setState({\n        taskEditing: taskEditing\n      });\n\n      _this.onShowForm();\n    };\n\n    _this.findIndex = function (id) {\n      var tasks = _this.state.tasks;\n      var result = -1;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) result = index;\n      });\n      return result;\n    };\n\n    _this.onFilter = function (filterName, filterStatus) {\n      filterStatus = parseInt(filterStatus, 10);\n\n      _this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        }\n      });\n    };\n\n    _this.onSearch = function (keyword) {\n      _this.setState({\n        keyword: keyword\n      });\n    };\n\n    _this.onSort = function (sortBy, sortValue) {\n      _this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    _this.state = {\n      taskEditing: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortBy: 'name',\n      sortValue: 1\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          taskEditing = _this$state.taskEditing,\n          filter = _this$state.filter,\n          keyword = _this$state.keyword,\n          sortBy = _this$state.sortBy,\n          sortValue = _this$state.sortValue;\n      var isDisplayForm = this.props.isDisplayForm; // if(filter){\n      //   if(filter.name){\n      //       tasks=  tasks.filter((task)=>{\n      //           return task.name.toLowerCase().indexOf(filter.name) !== -1;\n      //       });\n      //   }\n      //     tasks = tasks.filter((task)=>{\n      //         if(filter.status === -1){\n      //             return task;\n      //         }\n      //         else {\n      //             return task.status === (filter.status === 1 ? true : false)\n      //         }\n      //     })\n      // }\n      // if(keyword){\n      //   tasks=  tasks.filter((task)=>{\n      //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n      //     });\n      // }\n      // if(sortBy === 'name'){\n      //     tasks.sort((a,b)=>{\n      //       if(a.name > b.name) return sortValue;\n      //       else if(a.name < b.name) return -sortValue;\n      //       else return 0;\n      //     }) ; \n      // }\n      // else{\n      //   tasks.sort((a,b)=>{\n      //     if(a.status > b.status) return -sortValue;\n      //     else if(a.status < b.status) return   sortValue;\n      //     else return 0;\n      //   }) ;\n      // }\n\n      var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n        onSubmit: this.onSubmit,\n        onCloseForm: this.onCloseForm,\n        task: taskEditing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Qu\\u1EA3n l\\xFD c\\xF4ng vi\\u1EC7c\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, elmTaskForm), React.createElement(\"div\", {\n        className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), \"Th\\xEAm c\\xF4ng vi\\u1EC7c\"), React.createElement(TaskControl, {\n        onSearch: this.onSearch,\n        onSort: this.onSort,\n        sortBy: sortBy,\n        sortValue: sortValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        onUpdateStatus: this.onUpdateStatus,\n        onDelete: this.onDelete,\n        onUpdate: this.onUpdate,\n        onFilter: this.onFilter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onToggleForm: function onToggleForm() {\n      dispatch(actions.toggleForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Quanly_redux\\src\\App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","findIndex","connect","actions","App","props","onToggleForm","onCloseForm","onShowForm","onSubmit","data","tasks","state","id","generateID","push","index","setState","localStorage","setItem","JSON","stringify","onUpdateStatus","status","onDelete","task","splice","onUpdate","taskEditing","result","forEach","onFilter","filterName","filterStatus","parseInt","filter","name","toLowerCase","onSearch","keyword","onSort","sortBy","sortValue","isDisplayForm","elmTaskForm","mapStateToProps","mapDispatchToProps","dispatch","toggleForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport './Components/TaskForm';\nimport TaskForm from './Components/TaskForm';\nimport TaskControl from './Components/TaskControl';\nimport TaskList from './Components/TaskList';\nimport {findIndex} from 'lodash';\nimport {connect} from 'react-redux';\nimport * as  actions from './actions/index';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      taskEditing: null,\n      filter : {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sortBy : 'name',\n      sortValue: 1\n    }\n    }\n  \n  \n  \n \n  onToggleForm =() =>{\n    this.props.onToggleForm();  \n  }\n  onCloseForm =() =>{\n    \n\n  }\n  onShowForm = () =>{\n    \n  }\n  onSubmit = (data)=>{\n    let {tasks} =this.state;\n    if (data.id === ''){\n      data.id = this.generateID()\n      tasks.push(data)\n    }else{\n      let index = this.findIndex(data.id)\n      tasks[index] = data;\n    }\n    \n    this.setState({\n      tasks: tasks\n    })\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n  onUpdateStatus =(id) =>{\n    let {tasks} = this.state\n    let index = this.findIndex(id)\n    if(index !== -1){\n      tasks[index].status = ! tasks[index].status;\n      this.setState({\n      tasks : tasks\n    })\n\n    }\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n  onDelete =(id) =>{\n      let {tasks} =this.state\n      let index  = findIndex(tasks,(task)=>{\n          return task.id === id;\n      })\n      if(index !== -1){\n        tasks.splice(index,1);\n        this.setState({\n          tasks : tasks\n        })\n      }\n      localStorage.setItem('tasks',JSON.stringify(tasks))\n  }\n  onUpdate = (id) =>{\n      let {tasks} = this.state\n      let index = this.findIndex(id)\n      let taskEditing = tasks[index];\n      this.setState({\n        taskEditing : taskEditing \n      });\n      this.onShowForm();\n  }\n\n  findIndex = (id) =>{\n    let {tasks} = this.state\n    let result = -1;\n    tasks.forEach((task,index)=>{\n        if(task.id === id)\n            result = index;\n    })\n    return result;\n  }\n  onFilter = (filterName,filterStatus) =>{\n     filterStatus = parseInt(filterStatus,10);\n     this.setState({\n       filter:{\n         name: filterName.toLowerCase(),\n         status: filterStatus\n       }\n     })\n  }\n  onSearch = (keyword)=>{\n   \n    this.setState({\n      keyword: keyword\n    })\n  }\n  onSort = (sortBy,sortValue) =>{\n      this.setState({\n        sortBy : sortBy,\n        sortValue: sortValue\n      })\n  }\n  \n  render() {\n    let {\n        \n        taskEditing,\n        filter,\n        keyword,\n        sortBy,\n        sortValue\n      }= this.state;\n    \n    let {isDisplayForm} = this.props  \n    // if(filter){\n    //   if(filter.name){\n    //       tasks=  tasks.filter((task)=>{\n    //           return task.name.toLowerCase().indexOf(filter.name) !== -1;\n    //       });\n    //   }\n     \n    //     tasks = tasks.filter((task)=>{\n    //         if(filter.status === -1){\n    //             return task;\n    //         }\n    //         else {\n    //             return task.status === (filter.status === 1 ? true : false)\n    //         }\n    //     })\n      \n    // }\n    // if(keyword){\n    //   tasks=  tasks.filter((task)=>{\n    //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n    //     });\n    // }\n    // if(sortBy === 'name'){\n    //     tasks.sort((a,b)=>{\n    //       if(a.name > b.name) return sortValue;\n    //       else if(a.name < b.name) return -sortValue;\n    //       else return 0;\n    //     }) ; \n    // }\n    // else{\n    //   tasks.sort((a,b)=>{\n    //     if(a.status > b.status) return -sortValue;\n    //     else if(a.status < b.status) return   sortValue;\n    //     else return 0;\n    //   }) ;\n    // }\n    let elmTaskForm = isDisplayForm\n          ? <TaskForm onSubmit ={this.onSubmit} \n                      onCloseForm={this.onCloseForm}\n                      task ={taskEditing}\n                      /> \n          :''\n    return (\n     \n        <div className=\"container\">\n            <div className=\"text-center\">\n                <h1>Quản lý công việc</h1>\n            </div>\n            \n            <div className=\"row\">\n                <div className={isDisplayForm? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n                    {elmTaskForm}\n                </div>\n                <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                    <button type=\"button\"\n                           className=\"btn btn-primary\"\n                           onClick = {this.onToggleForm}\n                           >\n                        <span className=\"fa fa-plus mr-5\"></span>Thêm công việc\n                    </button>\n                        {/* {<!-- { Search-Sort} -->} */}\n                              <TaskControl\n                                onSearch = {this.onSearch}\n                                onSort ={this.onSort}\n                                sortBy = {sortBy}\n                                sortValue ={sortValue}\n                              />\n                        {/* <!-- List --> */}\n                              <TaskList\n                                \n                                onUpdateStatus = {this.onUpdateStatus}\n                                onDelete ={this.onDelete}\n                                onUpdate ={this.onUpdate}\n                                onFilter ={this.onFilter}\n                              />\n                </div>\n                \n            </div>\n            \n        </div>  \n    );\n  }\n\n}\nconst mapStateToProps = state =>{\n    return {\n      isDisplayForm : state.isDisplayForm\n    } ;\n};\n\nconst mapDispatchToProps = (dispatch,props) =>{\n    return {\n        onToggleForm: () =>{\n            dispatch(actions.toggleForm())\n        }\n    };\n};\nexport default connect(mapStateToProps,mapDispatchToProps) (App);\n"]},"metadata":{},"sourceType":"module"}