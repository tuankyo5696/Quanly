{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\App2\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './Components/TaskForm';\nimport TaskForm from './Components/TaskForm';\nimport TaskControl from './Components/TaskControl';\nimport TaskList from './Components/TaskList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.onToggleForm = function () {\n      _this.setState({\n        isDisplayForm: !_this.state.isDisplayForm\n      });\n    };\n\n    _this.onCloseForm = function () {\n      _this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    _this.onShowForm = function () {\n      _this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    _this.onSubmit = function (data) {\n      var tasks = _this.state.tasks;\n      data.id = _this.generateID();\n      tasks.push(data);\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdateStatus = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onDelete = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n\n        _this.setState({\n          tasks: tasks\n        });\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    _this.onUpdate = function (id) {\n      var tasks = _this.state.tasks;\n\n      var index = _this.findIndex(id);\n\n      console.log(index);\n\n      _this.setState({\n        taskEditting: taskEditting\n      });\n    };\n\n    _this.findIndex = function (id) {\n      var tasks = _this.state.tasks;\n      var result = -1;\n      tasks.forEach(function (task, index) {\n        if (task.id === id) result = index;\n      });\n      return result;\n    };\n\n    _this.state = {\n      tasks: [],\n      // id, name, status,\n      isDisplayForm: false,\n      taskEditting: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (localStorage && localStorage.getItem('tasks')) {\n        var tasks = JSON.parse(localStorage.getItem('tasks'));\n        this.setState({\n          tasks: tasks\n        });\n      }\n    }\n  }, {\n    key: \"s4\",\n    value: function s4() {\n      return Math.floor(1 + Math.random() * 0x10000).toString(16).substring(1); // random √çD\n    }\n  }, {\n    key: \"generateID\",\n    value: function generateID() {\n      return this.s4() + this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayForm = _this$state.isDisplayForm;\n      var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n        onSubmit: this.onSubmit,\n        onCloseForm: this.onCloseForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }) : '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Qu\\u1EA3n l\\xFD c\\xF4ng vi\\u1EC7c\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, elmTaskForm), React.createElement(\"div\", {\n        className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onToggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), \"Th\\xEAm c\\xF4ng vi\\u1EC7c\"), React.createElement(TaskControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(TaskList, {\n        tasks: tasks,\n        onUpdateStatus: this.onUpdateStatus,\n        onDelete: this.onDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\App2\\src\\App.js"],"names":["React","Component","TaskForm","TaskControl","TaskList","App","props","onToggleForm","setState","isDisplayForm","state","onCloseForm","onShowForm","onSubmit","data","tasks","id","generateID","push","localStorage","setItem","JSON","stringify","onUpdateStatus","index","findIndex","status","onDelete","splice","onUpdate","console","log","taskEditting","result","forEach","task","getItem","parse","Math","floor","random","toString","substring","s4","elmTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\nimport './Components/TaskForm';\nimport TaskForm from './Components/TaskForm';\nimport TaskControl from './Components/TaskControl';\nimport TaskList from './Components/TaskList';\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      tasks: [], // id, name, status,\n      isDisplayForm: false,\n      taskEditting: null\n    }\n    }\n  componentWillMount(){\n    if(localStorage && localStorage.getItem('tasks')){\n      let tasks= JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      })\n    }\n  }\n  \n  s4(){\n    return Math.floor((1+Math.random()*0x10000)).toString(16).substring(1); // random √çD\n  }\n  generateID(){\n    return this.s4()+ this.s4() + this.s4() + '-' + this.s4() + '-'+ this.s4()+'-'+ this.s4()+'-'+ this.s4()+ '-'+ this.s4()\n  }\n  onToggleForm =() =>{\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      })\n  }\n  onCloseForm =() =>{\n    this.setState({\n      isDisplayForm: false\n    })\n  }\n  onShowForm = () =>{\n    this.setState({\n      isDisplayForm: true\n    })\n  }\n  onSubmit = (data)=>{\n    let {tasks} =this.state;\n    data.id = this.generateID()\n    tasks.push(data)\n    this.setState({\n      tasks: tasks\n    })\n    localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n  onUpdateStatus =(id) =>{\n    let {tasks} = this.state\n    let index = this.findIndex(id)\n    if(index !== -1){\n      tasks[index].status = ! tasks[index].status;\n      this.setState({\n      tasks : tasks\n    })\n\n    }\n        localStorage.setItem('tasks',JSON.stringify(tasks));\n  }\n  onDelete =(id) =>{\n      let {tasks} =this.state\n      let index = this.findIndex(id)\n      if(index !== -1){\n        tasks.splice(index,1);\n        this.setState({\n          tasks : tasks\n        })\n      }\n      localStorage.setItem('tasks',JSON.stringify(tasks))\n  }\n  onUpdate = (id) =>{\n      let {tasks} = this.state\n      let index = this.findIndex(id)\n      console.log(index);\n      this.setState({\n        taskEditting : taskEditting \n      })\n  }\n  findIndex = (id) =>{\n    let {tasks} = this.state\n    let result = -1;\n    tasks.forEach((task,index)=>{\n        if(task.id === id)\n            result = index;\n    })\n    return result;\n  }\n  render() {\n    let {tasks,isDisplayForm}= this.state;\n    let elmTaskForm = isDisplayForm\n          ? <TaskForm onSubmit ={this.onSubmit} \n                      onCloseForm={this.onCloseForm}/> \n          :''\n    return (\n     \n        <div className=\"container\">\n            <div className=\"text-center\">\n                <h1>Qu·∫£n l√Ω c√¥ng vi·ªác</h1>\n            </div>\n            \n            <div className=\"row\">\n                <div className={isDisplayForm? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n                    {elmTaskForm}\n                </div>\n                <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\":\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n                    <button type=\"button\"\n                           className=\"btn btn-primary\"\n                           onClick = {this.onToggleForm}\n                           >\n                        <span className=\"fa fa-plus mr-5\"></span>Th√™m c√¥ng vi·ªác\n                    </button>\n                        {/* {<!-- { Search-Sort} -->} */}\n                              <TaskControl/>\n                        {/* <!-- List --> */}\n                              <TaskList\n                                tasks = {tasks}\n                                onUpdateStatus = {this.onUpdateStatus}\n                                onDelete ={this.onDelete}\n                              />\n                </div>\n                \n            </div>\n            \n        </div>\n        \n      \n    \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}