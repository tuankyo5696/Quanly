{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\Quanly_redux\\\\src\\\\Components\\\\TaskForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from './../actions/index';\n\nvar TaskForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskForm, _Component);\n\n  function TaskForm(props) {\n    var _this;\n\n    _classCallCheck(this, TaskForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TaskForm).call(this, props));\n\n    _this.onCloseForm = function () {\n      _this.props.onCloseForm();\n    };\n\n    _this.onChange = function (event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      if (name === 'status') {\n        value = target.value === 'true' ? true : false;\n      }\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.onAddTask(_this.state);\n\n      _this.onClear();\n\n      _this.onCloseForm();\n    };\n\n    _this.onClear = function () {\n      _this.setState({\n        name: '',\n        status: false\n      });\n    };\n\n    _this.state = {\n      id: '',\n      name: '',\n      status: false\n    };\n    return _this;\n  }\n\n  _createClass(TaskForm, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.task) {\n        this.setState({\n          id: this.props.task.id,\n          name: this.props.task.name,\n          status: this.props.task.status\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps && nextProps.task) {\n        this.setState({\n          id: nextProps.task.id,\n          name: nextProps.task.name,\n          status: nextProps.task.status\n        });\n      } else if (!nextProps.task) {\n        this.setState({\n          id: '',\n          name: '',\n          status: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var id = this.state.id;\n      return React.createElement(\"div\", {\n        className: \"panel panel-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"panel-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, id !== '' ? 'Cập nhật công việc' : 'Thêm công việc'), React.createElement(\"span\", {\n        className: \"fa fa-times-circle text-right\",\n        onClick: this.onCloseForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"panel-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"T\\xEAn\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Tr\\u1EA1ng th\\xE1i: \"), React.createElement(\"select\", {\n        name: \"status\",\n        id: \"input\",\n        className: \"form-control\",\n        value: this.state.status,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"K\\xEDch ho\\u1EA1t\"), React.createElement(\"option\", {\n        value: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"\\u1EA8n\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-plus mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"L\\u01B0u l\\u1EA1i\"), \"\\xA0\", React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: this.onClear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-close mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \"H\\u1EE7y b\\u1ECF\")))));\n    }\n  }]);\n\n  return TaskForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, props) {\n  return {\n    onAddTask: function onAddTask(task) {\n      dispatch(actions.addTask(task));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);","map":{"version":3,"sources":["C:\\Users\\HOME\\Desktop\\Quanly_redux\\src\\Components\\TaskForm.js"],"names":["React","Component","connect","actions","TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","onAddTask","state","onClear","status","id","task","nextProps","mapStateToProps","mapDispatchToProps","dispatch","addTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './../actions/index';\r\nclass TaskForm extends Component{\r\n   constructor(props){\r\n       super(props)\r\n       this.state ={\r\n           id: '',\r\n           name: '',\r\n           status: false\r\n       }\r\n   }\r\n   componentWillMount(){\r\n       if(this.props.task){\r\n           this.setState({\r\n                id: this.props.task.id,\r\n                name: this.props.task.name,\r\n                status: this.props.task.status\r\n           });\r\n            \r\n       }\r\n   }\r\n   componentWillReceiveProps(nextProps){\r\n    if(nextProps && nextProps.task){\r\n        this.setState({\r\n             id: nextProps.task.id,\r\n             name: nextProps.task.name,\r\n             status: nextProps.task.status\r\n        });\r\n         \r\n    } else if(!nextProps.task){\r\n        this.setState({\r\n           id: '',\r\n           name: '',\r\n           status: false\r\n        })\r\n    }\r\n   }\r\n  onCloseForm = () =>{\r\n       this.props.onCloseForm()\r\n   } \r\n   onChange =(event) =>{\r\n       let target= event.target;\r\n       let name = target.name;\r\n       let value = target.value;\r\n       if( name === 'status'){\r\n           value = target.value ==='true' ? true : false\r\n       }\r\n       this.setState({\r\n           [name]: value\r\n       })\r\n   }\r\n   onSubmit = (event) =>{\r\n       event.preventDefault();\r\n       this.props.onAddTask(this.state);\r\n       this.onClear();\r\n       this.onCloseForm();\r\n   }\r\n   onClear =() =>{\r\n       this.setState({\r\n           name: '',\r\n           status: false\r\n       })\r\n   }\r\n    render(){\r\n        let {id} = this.state;\r\n        return (\r\n            <div className=\"panel panel-warning\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\">\r\n                { id !== ''? 'Cập nhật công việc' : 'Thêm công việc' }\r\n                </h3>\r\n                <span className=\"fa fa-times-circle text-right\" onClick={this.onCloseForm}></span>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                {/* {<!-- form -->} */}\r\n                <form onSubmit = {this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Tên</label>\r\n                        <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                name=\"name\"\r\n                                value= {this.state.name}\r\n                                onChange= {this.onChange}\r\n                                />\r\n                    </div>\r\n                        <label >Trạng thái: </label>\r\n                        <select name=\"status\" \r\n                                id=\"input\" \r\n                                className=\"form-control\" \r\n                                value = {this.state.status}\r\n                                onChange={this.onChange}\r\n                                >\r\n                            <option value={true}>Kích hoạt</option>\r\n                            <option value={false}>Ẩn</option>\r\n                        </select><br/>\r\n                    <div className=\"text-center\">\r\n                        <button type=\"submit\" className=\"btn btn-warning\">\r\n                            <span className=\"fa fa-plus mr-5\"></span>Lưu lại\r\n                        </button>&nbsp;\r\n                        \r\n                        <button type=\"button\" \r\n                                className=\"btn btn-danger\"\r\n                                onClick ={this.onClear}\r\n                                >\r\n                            <span className=\"fa fa-close mr-5\"></span>Hủy bỏ\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                \r\n                </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n  \r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch,props) =>{\r\n    return {\r\n        onAddTask :  (task) =>{\r\n            dispatch(actions.addTask(task));\r\n        }  \r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps) (TaskForm);\r\n"]},"metadata":{},"sourceType":"module"}